["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/js-yaml/lib/schema/json.js"],"~:js","shadow$provide[20]=function(P,ta,ka){ta.exports=P(15).extend({implicit:[P(16),P(17),P(18),P(19)]})}","~:source","shadow$provide[20] = function(require,module,exports) {\n// Standard YAML's JSON schema.\n// http://www.yaml.org/spec/1.2/spec.html#id2803231\n//\n// NOTE: JS-YAML does not support schema-specific tag resolution restrictions.\n// So, this schema is not such strict as defined in the YAML specification.\n// It allows numbers in binary notaion, use `Null` and `NULL` as `null`, etc.\n\n\n'use strict';\n\n\nmodule.exports = require('./failsafe').extend({\n  implicit: [\n    require('../type/null'),\n    require('../type/bool'),\n    require('../type/int'),\n    require('../type/float')\n  ]\n});\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$js_yaml$lib$type$null","~$module$node_modules$js_yaml$lib$type$bool","~$module$node_modules$js_yaml$lib$schema$failsafe","~$module$node_modules$js_yaml$lib$type$int","~$module$node_modules$js_yaml$lib$type$float"]],"~:properties",["^5",["implicit"]],"~:compiled-at",1751714332130,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$js_yaml$lib$schema$json.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,CAAe,EAAf,CAAA,CAAqB,QAAQ,CAACC,CAAD,CAASC,EAAT,CAAgBC,EAAhB,CAAyB,CAYtDD,EAAOC,CAAAA,OAAP,CAAiBF,CAAA,CAAQ,EAAR,CAAsBG,CAAAA,MAAtB,CAA6B,CAC5CC,SAAU,CACRJ,CAAA,CAAQ,EAAR,CADQ,CAERA,CAAA,CAAQ,EAAR,CAFQ,CAGRA,CAAA,CAAQ,EAAR,CAHQ,CAIRA,CAAA,CAAQ,EAAR,CAJQ,CADkC,CAA7B,CAZqC;\",\n\"sources\":[\"node_modules/js-yaml/lib/schema/json.js\"],\n\"sourcesContent\":[\"shadow$provide[20] = function(require,module,exports) {\\n// Standard YAML's JSON schema.\\n// http://www.yaml.org/spec/1.2/spec.html#id2803231\\n//\\n// NOTE: JS-YAML does not support schema-specific tag resolution restrictions.\\n// So, this schema is not such strict as defined in the YAML specification.\\n// It allows numbers in binary notaion, use `Null` and `NULL` as `null`, etc.\\n\\n\\n'use strict';\\n\\n\\nmodule.exports = require('./failsafe').extend({\\n  implicit: [\\n    require('../type/null'),\\n    require('../type/bool'),\\n    require('../type/int'),\\n    require('../type/float')\\n  ]\\n});\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"require\",\"module\",\"exports\",\"extend\",\"implicit\"]\n}\n"]
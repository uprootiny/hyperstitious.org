["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/js-yaml/lib/type.js"],"~:js","shadow$provide[10]=function(P,ta,ka){function V(I){var H={};I!==null&&Object.keys(I).forEach(function(W){I[W].forEach(function(D){H[String(D)]=W})});return H}var J=P(8),N=\"kind multi resolve construct instanceOf predicate represent representName defaultStyle styleAliases\".split(\" \"),L=[\"scalar\",\"sequence\",\"mapping\"];ta.exports=function(I,H){H=H||{};Object.keys(H).forEach(function(W){if(N.indexOf(W)===-1)throw new J('Unknown option \"'+W+'\" is met in definition of \"'+I+'\" YAML type.');});this.options=\nH;this.tag=I;this.kind=H.kind||null;this.resolve=H.resolve||function(){return!0};this.construct=H.construct||function(W){return W};this.instanceOf=H.instanceOf||null;this.predicate=H.predicate||null;this.represent=H.represent||null;this.representName=H.representName||null;this.defaultStyle=H.defaultStyle||null;this.multi=H.multi||!1;this.styleAliases=V(H.styleAliases||null);if(L.indexOf(this.kind)===-1)throw new J('Unknown kind \"'+this.kind+'\" is specified for \"'+I+'\" YAML type.');}}","~:source","shadow$provide[10] = function(require,module,exports) {\n'use strict';\n\nvar YAMLException = require('./exception');\n\nvar TYPE_CONSTRUCTOR_OPTIONS = [\n  'kind',\n  'multi',\n  'resolve',\n  'construct',\n  'instanceOf',\n  'predicate',\n  'represent',\n  'representName',\n  'defaultStyle',\n  'styleAliases'\n];\n\nvar YAML_NODE_KINDS = [\n  'scalar',\n  'sequence',\n  'mapping'\n];\n\nfunction compileStyleAliases(map) {\n  var result = {};\n\n  if (map !== null) {\n    Object.keys(map).forEach(function (style) {\n      map[style].forEach(function (alias) {\n        result[String(alias)] = style;\n      });\n    });\n  }\n\n  return result;\n}\n\nfunction Type(tag, options) {\n  options = options || {};\n\n  Object.keys(options).forEach(function (name) {\n    if (TYPE_CONSTRUCTOR_OPTIONS.indexOf(name) === -1) {\n      throw new YAMLException('Unknown option \"' + name + '\" is met in definition of \"' + tag + '\" YAML type.');\n    }\n  });\n\n  // TODO: Add tag format check.\n  this.options       = options; // keep original options in case user wants to extend this type later\n  this.tag           = tag;\n  this.kind          = options['kind']          || null;\n  this.resolve       = options['resolve']       || function () { return true; };\n  this.construct     = options['construct']     || function (data) { return data; };\n  this.instanceOf    = options['instanceOf']    || null;\n  this.predicate     = options['predicate']     || null;\n  this.represent     = options['represent']     || null;\n  this.representName = options['representName'] || null;\n  this.defaultStyle  = options['defaultStyle']  || null;\n  this.multi         = options['multi']         || false;\n  this.styleAliases  = compileStyleAliases(options['styleAliases'] || null);\n\n  if (YAML_NODE_KINDS.indexOf(this.kind) === -1) {\n    throw new YAMLException('Unknown kind \"' + this.kind + '\" is specified for \"' + tag + '\" YAML type.');\n  }\n}\n\nmodule.exports = Type;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$js_yaml$lib$exception"]],"~:properties",["^5",["instanceOf","resolve","styleAliases","construct","tag","defaultStyle","kind","predicate","options","represent","multi","representName"]],"~:compiled-at",1751714332110,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$js_yaml$lib$type.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAe,EAAf,CAAA,CAAqB,QAAQ,CAACC,CAAD,CAASC,EAAT,CAAgBC,EAAhB,CAAyB,CAwBtDC,QAASA,EAAmB,CAACC,CAAD,CAAM,CAChC,IAAIC,EAAS,EAETD,EAAJ,GAAY,IAAZ,EACEE,MAAOC,CAAAA,IAAP,CAAYH,CAAZ,CAAiBI,CAAAA,OAAjB,CAAyB,QAAS,CAACC,CAAD,CAAQ,CACxCL,CAAA,CAAIK,CAAJ,CAAWD,CAAAA,OAAX,CAAmB,QAAS,CAACE,CAAD,CAAQ,CAClCL,CAAA,CAAOM,MAAA,CAAOD,CAAP,CAAP,CAAA,CAAwBD,CADU,CAApC,CADwC,CAA1C,CAOF,OAAOJ,EAXyB,CArBlC,IAAIO,EAAgBZ,CAAA,CAAQ,CAAR,CAApB,CAEIa,EAA2B,qGAAA,CAAA,KAAA,CAAA,GAAA,CAF/B,CAeIC,EAAkB,CACpB,QADoB,CAEpB,UAFoB,CAGpB,SAHoB,CAgDtBb,GAAOC,CAAAA,OAAP,CA5BAa,QAAa,CAACC,CAAD,CAAMC,CAAN,CAAe,CAC1BA,CAAA,CAAUA,CAAV,EAAqB,EAErBX,OAAOC,CAAAA,IAAP,CAAYU,CAAZ,CAAqBT,CAAAA,OAArB,CAA6B,QAAS,CAACU,CAAD,CAAO,CAC3C,GAAIL,CAAyBM,CAAAA,OAAzB,CAAiCD,CAAjC,CAAJ,GAA+C,CAAC,CAAhD,CACE,KAAM,KAAIN,CAAJ,CAAkB,kBAAlB,CAAuCM,CAAvC,CAA8C,6BAA9C,CAA8EF,CAA9E,CAAoF,cAApF,CAAN,CAFyC,CAA7C,CAOA,KAAKC,CAAAA,OAAL;AAAqBA,CACrB,KAAKD,CAAAA,GAAL,CAAqBA,CACrB,KAAKI,CAAAA,IAAL,CAAqBH,CAAA,CAAA,IAArB,EAAiD,IACjD,KAAKI,CAAAA,OAAL,CAAqBJ,CAAA,CAAA,OAArB,EAAiD,QAAS,EAAG,CAAE,MAAO,CAAA,CAAT,CAC7D,KAAKK,CAAAA,SAAL,CAAqBL,CAAA,CAAA,SAArB,EAAiD,QAAS,CAACM,CAAD,CAAO,CAAE,MAAOA,EAAT,CACjE,KAAKC,CAAAA,UAAL,CAAqBP,CAAA,CAAA,UAArB,EAAiD,IACjD,KAAKQ,CAAAA,SAAL,CAAqBR,CAAA,CAAA,SAArB,EAAiD,IACjD,KAAKS,CAAAA,SAAL,CAAqBT,CAAA,CAAA,SAArB,EAAiD,IACjD,KAAKU,CAAAA,aAAL,CAAqBV,CAAA,CAAA,aAArB,EAAiD,IACjD,KAAKW,CAAAA,YAAL,CAAqBX,CAAA,CAAA,YAArB,EAAiD,IACjD,KAAKY,CAAAA,KAAL,CAAqBZ,CAAA,CAAA,KAArB,EAAiD,CAAA,CACjD,KAAKa,CAAAA,YAAL,CAAqB3B,CAAA,CAAoBc,CAAA,CAAA,YAApB,EAA+C,IAA/C,CAErB,IAAIH,CAAgBK,CAAAA,OAAhB,CAAwB,IAAKC,CAAAA,IAA7B,CAAJ,GAA2C,CAAC,CAA5C,CACE,KAAM,KAAIR,CAAJ,CAAkB,gBAAlB,CAAqC,IAAKQ,CAAAA,IAA1C,CAAiD,sBAAjD,CAA0EJ,CAA1E,CAAgF,cAAhF,CAAN,CAxBwB,CAtC0B;\",\n\"sources\":[\"node_modules/js-yaml/lib/type.js\"],\n\"sourcesContent\":[\"shadow$provide[10] = function(require,module,exports) {\\n'use strict';\\n\\nvar YAMLException = require('./exception');\\n\\nvar TYPE_CONSTRUCTOR_OPTIONS = [\\n  'kind',\\n  'multi',\\n  'resolve',\\n  'construct',\\n  'instanceOf',\\n  'predicate',\\n  'represent',\\n  'representName',\\n  'defaultStyle',\\n  'styleAliases'\\n];\\n\\nvar YAML_NODE_KINDS = [\\n  'scalar',\\n  'sequence',\\n  'mapping'\\n];\\n\\nfunction compileStyleAliases(map) {\\n  var result = {};\\n\\n  if (map !== null) {\\n    Object.keys(map).forEach(function (style) {\\n      map[style].forEach(function (alias) {\\n        result[String(alias)] = style;\\n      });\\n    });\\n  }\\n\\n  return result;\\n}\\n\\nfunction Type(tag, options) {\\n  options = options || {};\\n\\n  Object.keys(options).forEach(function (name) {\\n    if (TYPE_CONSTRUCTOR_OPTIONS.indexOf(name) === -1) {\\n      throw new YAMLException('Unknown option \\\"' + name + '\\\" is met in definition of \\\"' + tag + '\\\" YAML type.');\\n    }\\n  });\\n\\n  // TODO: Add tag format check.\\n  this.options       = options; // keep original options in case user wants to extend this type later\\n  this.tag           = tag;\\n  this.kind          = options['kind']          || null;\\n  this.resolve       = options['resolve']       || function () { return true; };\\n  this.construct     = options['construct']     || function (data) { return data; };\\n  this.instanceOf    = options['instanceOf']    || null;\\n  this.predicate     = options['predicate']     || null;\\n  this.represent     = options['represent']     || null;\\n  this.representName = options['representName'] || null;\\n  this.defaultStyle  = options['defaultStyle']  || null;\\n  this.multi         = options['multi']         || false;\\n  this.styleAliases  = compileStyleAliases(options['styleAliases'] || null);\\n\\n  if (YAML_NODE_KINDS.indexOf(this.kind) === -1) {\\n    throw new YAMLException('Unknown kind \\\"' + this.kind + '\\\" is specified for \\\"' + tag + '\\\" YAML type.');\\n  }\\n}\\n\\nmodule.exports = Type;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"require\",\"module\",\"exports\",\"compileStyleAliases\",\"map\",\"result\",\"Object\",\"keys\",\"forEach\",\"style\",\"alias\",\"String\",\"YAMLException\",\"TYPE_CONSTRUCTOR_OPTIONS\",\"YAML_NODE_KINDS\",\"Type\",\"tag\",\"options\",\"name\",\"indexOf\",\"kind\",\"resolve\",\"construct\",\"data\",\"instanceOf\",\"predicate\",\"represent\",\"representName\",\"defaultStyle\",\"multi\",\"styleAliases\"]\n}\n"]
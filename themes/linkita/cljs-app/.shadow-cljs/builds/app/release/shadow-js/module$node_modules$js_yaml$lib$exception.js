["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/js-yaml/lib/exception.js"],"~:js","shadow$provide[8]=function(P,ta,ka){function V(N,L){var I=\"\",H=N.reason||\"(unknown reason)\";if(!N.mark)return H;N.mark.name&&(I+='in \"'+N.mark.name+'\" ');I+=\"(\"+(N.mark.line+1)+\":\"+(N.mark.column+1)+\")\";!L&&N.mark.snippet&&(I+=\"\\n\\n\"+N.mark.snippet);return H+\" \"+I}function J(N,L){Error.call(this);this.name=\"YAMLException\";this.reason=N;this.mark=L;this.message=V(this,!1);Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=Error().stack||\"\"}J.prototype=Object.create(Error.prototype);\nJ.prototype.constructor=J;J.prototype.toString=function(N){return this.name+\": \"+V(this,N)};ta.exports=J}","~:source","shadow$provide[8] = function(require,module,exports) {\n// YAML error class. http://stackoverflow.com/questions/8458984\n//\n'use strict';\n\n\nfunction formatError(exception, compact) {\n  var where = '', message = exception.reason || '(unknown reason)';\n\n  if (!exception.mark) return message;\n\n  if (exception.mark.name) {\n    where += 'in \"' + exception.mark.name + '\" ';\n  }\n\n  where += '(' + (exception.mark.line + 1) + ':' + (exception.mark.column + 1) + ')';\n\n  if (!compact && exception.mark.snippet) {\n    where += '\\n\\n' + exception.mark.snippet;\n  }\n\n  return message + ' ' + where;\n}\n\n\nfunction YAMLException(reason, mark) {\n  // Super constructor\n  Error.call(this);\n\n  this.name = 'YAMLException';\n  this.reason = reason;\n  this.mark = mark;\n  this.message = formatError(this, false);\n\n  // Include stack trace in error object\n  if (Error.captureStackTrace) {\n    // Chrome and NodeJS\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    // FF, IE 10+ and Safari 6+. Fallback for others\n    this.stack = (new Error()).stack || '';\n  }\n}\n\n\n// Inherit from Error\nYAMLException.prototype = Object.create(Error.prototype);\nYAMLException.prototype.constructor = YAMLException;\n\n\nYAMLException.prototype.toString = function toString(compact) {\n  return this.name + ': ' + formatError(this, compact);\n};\n\n\nmodule.exports = YAMLException;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["message","prototype","toString","name","reason","mark","stack","constructor"]],"~:compiled-at",1751714332097,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$js_yaml$lib$exception.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAe,CAAf,CAAA,CAAoB,QAAQ,CAACC,CAAD,CAASC,EAAT,CAAgBC,EAAhB,CAAyB,CAMrDC,QAASA,EAAW,CAACC,CAAD,CAAYC,CAAZ,CAAqB,CAAA,IACnCC,EAAQ,EAD2B,CACvBC,EAAUH,CAAUI,CAAAA,MAApBD,EAA8B,kBAE9C,IAAI,CAACH,CAAUK,CAAAA,IAAf,CAAqB,MAAOF,EAExBH,EAAUK,CAAAA,IAAKC,CAAAA,IAAnB,GACEJ,CADF,EACW,MADX,CACoBF,CAAUK,CAAAA,IAAKC,CAAAA,IADnC,CAC0C,IAD1C,CAIAJ,EAAA,EAAS,GAAT,EAAgBF,CAAUK,CAAAA,IAAKE,CAAAA,IAA/B,CAAsC,CAAtC,EAA2C,GAA3C,EAAkDP,CAAUK,CAAAA,IAAKG,CAAAA,MAAjE,CAA0E,CAA1E,EAA+E,GAE3E,EAACP,CAAL,EAAgBD,CAAUK,CAAAA,IAAKI,CAAAA,OAA/B,GACEP,CADF,EACW,MADX,CACoBF,CAAUK,CAAAA,IAAKI,CAAAA,OADnC,CAIA,OAAON,EAAP,CAAiB,GAAjB,CAAuBD,CAfgB,CAmBzCQ,QAASA,EAAa,CAACN,CAAD,CAASC,CAAT,CAAe,CAEnCM,KAAMC,CAAAA,IAAN,CAAW,IAAX,CAEA,KAAKN,CAAAA,IAAL,CAAY,eACZ,KAAKF,CAAAA,MAAL,CAAcA,CACd,KAAKC,CAAAA,IAAL,CAAYA,CACZ,KAAKF,CAAAA,OAAL,CAAeJ,CAAA,CAAY,IAAZ,CAAkB,CAAA,CAAlB,CAGXY,MAAME,CAAAA,iBAAV,CAEEF,KAAME,CAAAA,iBAAN,CAAwB,IAAxB,CAA8B,IAAKC,CAAAA,WAAnC,CAFF,CAKE,IAAKC,CAAAA,KALP,CAKoBJ,KAAJ,EAAaI,CAAAA,KAL7B,EAKsC,EAfH,CAqBrCL,CAAcM,CAAAA,SAAd,CAA0BC,MAAOC,CAAAA,MAAP,CAAcP,KAAMK,CAAAA,SAApB,CAC1BN;CAAcM,CAAAA,SAAUF,CAAAA,WAAxB,CAAsCJ,CAGtCA,EAAcM,CAAAA,SAAUG,CAAAA,QAAxB,CAAmCC,QAAiB,CAACnB,CAAD,CAAU,CAC5D,MAAO,KAAKK,CAAAA,IAAZ,CAAmB,IAAnB,CAA0BP,CAAA,CAAY,IAAZ,CAAkBE,CAAlB,CADkC,CAK9DJ,GAAOC,CAAAA,OAAP,CAAiBY,CAvDoC;\",\n\"sources\":[\"node_modules/js-yaml/lib/exception.js\"],\n\"sourcesContent\":[\"shadow$provide[8] = function(require,module,exports) {\\n// YAML error class. http://stackoverflow.com/questions/8458984\\n//\\n'use strict';\\n\\n\\nfunction formatError(exception, compact) {\\n  var where = '', message = exception.reason || '(unknown reason)';\\n\\n  if (!exception.mark) return message;\\n\\n  if (exception.mark.name) {\\n    where += 'in \\\"' + exception.mark.name + '\\\" ';\\n  }\\n\\n  where += '(' + (exception.mark.line + 1) + ':' + (exception.mark.column + 1) + ')';\\n\\n  if (!compact && exception.mark.snippet) {\\n    where += '\\\\n\\\\n' + exception.mark.snippet;\\n  }\\n\\n  return message + ' ' + where;\\n}\\n\\n\\nfunction YAMLException(reason, mark) {\\n  // Super constructor\\n  Error.call(this);\\n\\n  this.name = 'YAMLException';\\n  this.reason = reason;\\n  this.mark = mark;\\n  this.message = formatError(this, false);\\n\\n  // Include stack trace in error object\\n  if (Error.captureStackTrace) {\\n    // Chrome and NodeJS\\n    Error.captureStackTrace(this, this.constructor);\\n  } else {\\n    // FF, IE 10+ and Safari 6+. Fallback for others\\n    this.stack = (new Error()).stack || '';\\n  }\\n}\\n\\n\\n// Inherit from Error\\nYAMLException.prototype = Object.create(Error.prototype);\\nYAMLException.prototype.constructor = YAMLException;\\n\\n\\nYAMLException.prototype.toString = function toString(compact) {\\n  return this.name + ': ' + formatError(this, compact);\\n};\\n\\n\\nmodule.exports = YAMLException;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"require\",\"module\",\"exports\",\"formatError\",\"exception\",\"compact\",\"where\",\"message\",\"reason\",\"mark\",\"name\",\"line\",\"column\",\"snippet\",\"YAMLException\",\"Error\",\"call\",\"captureStackTrace\",\"constructor\",\"stack\",\"prototype\",\"Object\",\"create\",\"toString\",\"YAMLException.prototype.toString\"]\n}\n"]